(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{515:function(i,v,_){"use strict";_.r(v);var t=_(4),r=Object(t.a)({},(function(){var i=this,v=i.$createElement,_=i._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[_("h2",{attrs:{id:"什么是ramdisk"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是ramdisk"}},[i._v("#")]),i._v(" 什么是ramdisk")]),i._v(" "),_("p",[i._v("ramdisk顾名思义就是使用内存模拟disk的一种技术，将实际硬盘中的一些或全部block拷贝到预先分配的内存空间，然后将这块内存空间当作普通块设备进行操作。由于一切操作都在RAM中，所以相比普通磁盘速度更快，但同时也有RAM掉电丢失数据的缺点。")]),i._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",[i._v("嵌入式设备常见的initrd就是ramdisk的一种，因为用于在bootup阶段使用，所以称为initrd(init ramdisk)。Initrd进行了gzip压缩，有文件系统格式，比如ext2，需要kernel包含对于的驱动。然而initramfs是一个gzip cpio压缩，类似tar不过更简单。内核的cpio提取代码非常小。initrd使用了ramdisk，initramfs使用了ramfs。Initramfs机制比initrd机制要优越，是一种新的实现方式。")])]),i._v(" "),_("h2",{attrs:{id:"从linux的启动流程谈起"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#从linux的启动流程谈起"}},[i._v("#")]),i._v(" 从linux的启动流程谈起")]),i._v(" "),_("p",[i._v("一旦 Linux 内核控制了系统（内核在由启动加载引导程序加载后获得控制权），它就会准备好内存结构和驱动程序。然后它将控制交给应用程序（通常是 init），其任务是进一步准备系统并确保在引导过程结束时，所有必要的服务正在运行且用户能够登录。该"),_("code",[i._v("init")]),i._v("应用程序通过启动"),_("code",[i._v("udev")]),i._v("守护程序来执行此操作，该守护程序将根据检测到的设备进一步加载和准备系统。启动"),_("code",[i._v("udev")]),i._v("时，将挂载尚未挂载的所有剩余文件系统，并启动其余服务。")]),i._v(" "),_("p",[i._v("对于那些所有必需的文件和工具驻留在同一个文件系统中的系统，"),_("code",[i._v("init")]),i._v("应用程序可以完全控制进一步的引导过程。但当有多个文件系统被定义（或拥有更多的外来设备）时，情况可能变得更棘手些︰")]),i._v(" "),_("ul",[_("li",[i._v("当"),_("code",[i._v("/usr")]),i._v("分区位于单独的文件系统上时，除非"),_("code",[i._v("/usr")]),i._v("可用，否则无法使用存储在"),_("code",[i._v("/usr")]),i._v("中的文件的工具和驱动程序。如果需要这些工具来使"),_("code",[i._v("/usr")]),i._v("可用，那么我们就无法启动系统。")]),i._v(" "),_("li",[i._v("如果根文件系统被加密，那么 Linux 内核将无法找到"),_("code",[i._v("init")]),i._v("程序，导致系统无法启动。\n这个问题的解决方案长期以来一直使用"),_("code",[i._v("initrd")]),i._v("（初始根设备）。")])]),i._v(" "),_("p",[_("code",[i._v("initrd")]),i._v("是一个内存中的磁盘结构（ramdisk），其中包含必要的工具和脚本，用于在将控制权交给根文件系统上的"),_("code",[i._v("init")]),i._v("应用程序之前挂载所需的文件系统。"),_("code",[i._v("Linux")]),i._v("内核在此根磁盘上触发安装脚本（通常称为"),_("code",[i._v("linuxrc")]),i._v("，但该名称不是必需的），此脚本的工作是准备系统、切换到真正的根文件系统，然后调用"),_("code",[i._v("init")]),i._v("。")]),i._v(" "),_("p",[i._v("虽然使用initrd是必要的，但是它有一些缺点：")]),i._v(" "),_("ol",[_("li",[i._v("这是一个完整的块设备，具有文件系统的所有特点，需要内核支持，例如需要包含ext2/3/4的驱动程序。")]),i._v(" "),_("li",[_("code",[i._v("initrd")]),i._v("大小固定，需要提前分配空间且无法缩小。")]),i._v(" "),_("li",[i._v("因为它是一个真实的、静态的设备，Linux内核对块设备的读写有缓存，这使得"),_("code",[i._v("initrd")]),i._v("有更大的内存消耗。")])]),i._v(" "),_("p",[_("code",[i._v("initramfs")]),i._v("的诞生解决了这些的问题。")]),i._v(" "),_("div",{staticClass:"custom-block right"},[_("p",[i._v("来自 "),_("a",{attrs:{href:"https://wiki.gentoo.org/wiki/Initramfs/Guide/zh-cn",target:"_blank",rel:"noopener noreferrer"}},[i._v("gentoo wiki"),_("OutboundLink")],1)])]),i._v(" "),_("h2",{attrs:{id:"initramfs"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#initramfs"}},[i._v("#")]),i._v(" initramfs")]),i._v(" "),_("p",[_("code",[i._v("initramfs")]),i._v("是基于内存并且与内核打包在一起的文件系统，通常是gun cpio格式的，而cpio的解压代码包含在内核中。相比"),_("code",[i._v("initrd")]),i._v("使用内存模拟块设备，"),_("code",[i._v("initramfs")]),i._v("本身就是一系列文件，而不是文件系统，因此不需要驱动程序。也就没有"),_("code",[i._v("initrd")]),i._v("缓存浪费的问题。"),_("code",[i._v("initramfs")]),i._v("中的"),_("code",[i._v("init")]),i._v("程序可以通过检查系统配置去挂载其他文件系统，并通过"),_("code",[i._v("exec")]),i._v("调用替换自身为其他文件系统中的"),_("code",[i._v("init")]),i._v("程序去执行其他更复杂的任务。")]),i._v(" "),_("p",[i._v("优点：")]),i._v(" "),_("ul",[_("li",[i._v("减少内存占用")]),i._v(" "),_("li",[i._v("简化内核实现")]),i._v(" "),_("li",[i._v("在boot阶段给用户更多的控制权")])])])}),[],!1,null,null,null);v.default=r.exports}}]);